{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"G:\\\\corona\\\\components\\\\Map.js\";\nvar __jsx = React.createElement;\n// import React, { Component } from \"react\";\n// import { Map, TileLayer, Marker, Popup } from \"react-leaflet\";\n// import { LayerGroup, Circle } from \"leaflet\";\n// // type State = {\n// //   lat: number,\n// //   lng: number,\n// //   zoom: number,\n// // }\n// export default class SimpleExample extends Component {\n//   state = {\n//     lat: 51.505,\n//     lng: -0.09,\n//     zoom: 13\n//   };\n//   render() {\n//     const position = [this.state.lat, this.state.lng];\n//     const center = [51.505, -0.09];\n//     const multiPolygon = [\n//       [\n//         [51.51, -0.12],\n//         [51.51, -0.13],\n//         [51.53, -0.13]\n//       ],\n//       [\n//         [51.51, -0.05],\n//         [51.51, -0.07],\n//         [51.53, -0.07]\n//       ]\n//     ];\n//     const rectangle = [\n//       [51.49, -0.08],\n//       [51.5, -0.06]\n//     ];\n//     return (\n//       <div>\n//         <Map\n//           style={{ width: \"600px\", height: \"400px\" }}\n//           center={position}\n//           zoom={this.state.zoom}\n//         >\n//           <TileLayer\n//             attribution='&amp;copy <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\n//             url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n//           />\n//           {/* <LayerGroup>\n//             <Circle center={center} fillColor=\"blue\" radius={200} />\n//             <Circle\n//               center={center}\n//               fillColor=\"red\"\n//               radius={100}\n//               stroke={false}\n//             />\n//             <LayerGroup>\n//               <Circle\n//                 center={[51.51, -0.08]}\n//                 color=\"green\"\n//                 fillColor=\"green\"\n//                 radius={100}\n//               />\n//             </LayerGroup>\n//           </LayerGroup> */}\n//           <Marker position={position}>\n//             <Popup>\n//               A pretty CSS3 popup. <br /> Easily customizable.\n//             </Popup>\n//           </Marker>\n//         </Map>\n//       </div>\n//     );\n//   }\n// }\nimport React, { Component } from \"react\";\nimport { Circle, CircleMarker, Map, Marker, Polygon, Popup, Rectangle, TileLayer, Tooltip } from \"react-leaflet\";\nvar center = [51.505, -0.09];\nvar multiPolygon = [[[51.51, -0.12], [51.51, -0.13], [51.53, -0.13]], [[51.51, -0.05], [51.51, -0.07], [51.53, -0.07]]];\nvar rectangle = [[51.49, -0.08], [51.5, -0.06]];\n\nvar TooltipExample = /*#__PURE__*/function (_Component) {\n  _inherits(TooltipExample, _Component);\n\n  function TooltipExample() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, TooltipExample);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(TooltipExample)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      clicked: 0\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onClickCircle\", function () {\n      _this.setState({\n        clicked: _this.state.clicked + 1\n      });\n    });\n\n    return _this;\n  }\n\n  _createClass(TooltipExample, [{\n    key: \"render\",\n    value: function render() {\n      var clickedText = this.state.clicked === 0 ? \"Click this Circle to change the Tooltip text\" : \"Circle click: \".concat(this.state.clicked);\n      return __jsx(Map, {\n        center: center,\n        zoom: 13,\n        style: {\n          width: \"600px\",\n          height: \"400px\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128\n        },\n        __self: this\n      }, __jsx(TileLayer, {\n        attribution: \"&copy <a href=\\\"http://osm.org/copyright\\\">OpenStreetMap</a> contributors\",\n        url: \"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133\n        },\n        __self: this\n      }), __jsx(Circle, {\n        center: center,\n        fillColor: \"blue\",\n        onClick: this.onClickCircle,\n        radius: 200,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 137\n        },\n        __self: this\n      }, __jsx(Tooltip, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 143\n        },\n        __self: this\n      }, clickedText)), __jsx(CircleMarker, {\n        center: [51.51, -0.12],\n        color: \"red\",\n        radius: 20,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 145\n        },\n        __self: this\n      }, __jsx(Tooltip, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 146\n        },\n        __self: this\n      }, \"Tooltip for CircleMarker\")), __jsx(Marker, {\n        position: [51.51, -0.09],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 148\n        },\n        __self: this\n      }, __jsx(Popup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 149\n        },\n        __self: this\n      }, \"Popup for Marker\"), __jsx(Tooltip, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 150\n        },\n        __self: this\n      }, \"Tooltip for Marker\")), __jsx(Polygon, {\n        color: \"purple\",\n        positions: multiPolygon,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 152\n        },\n        __self: this\n      }, __jsx(Tooltip, {\n        sticky: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 153\n        },\n        __self: this\n      }, \"sticky Tooltip for Polygon\")), __jsx(Rectangle, {\n        bounds: rectangle,\n        color: \"black\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 155\n        },\n        __self: this\n      }, __jsx(Tooltip, {\n        direction: \"bottom\",\n        offset: [0, 20],\n        opacity: 1,\n        permanent: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 156\n        },\n        __self: this\n      }, \"permanent Tooltip for Rectangle\")));\n    }\n  }]);\n\n  return TooltipExample;\n}(Component);\n\nexport { TooltipExample as default };","map":{"version":3,"sources":["G:/corona/components/Map.js"],"names":["React","Component","Circle","CircleMarker","Map","Marker","Polygon","Popup","Rectangle","TileLayer","Tooltip","center","multiPolygon","rectangle","TooltipExample","clicked","setState","state","clickedText","width","height","onClickCircle"],"mappings":"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","sourcesContent":["// import React, { Component } from \"react\";\r\n// import { Map, TileLayer, Marker, Popup } from \"react-leaflet\";\r\n// import { LayerGroup, Circle } from \"leaflet\";\r\n\r\n// // type State = {\r\n// //   lat: number,\r\n// //   lng: number,\r\n// //   zoom: number,\r\n// // }\r\n\r\n// export default class SimpleExample extends Component {\r\n//   state = {\r\n//     lat: 51.505,\r\n//     lng: -0.09,\r\n//     zoom: 13\r\n//   };\r\n\r\n//   render() {\r\n//     const position = [this.state.lat, this.state.lng];\r\n//     const center = [51.505, -0.09];\r\n\r\n//     const multiPolygon = [\r\n//       [\r\n//         [51.51, -0.12],\r\n//         [51.51, -0.13],\r\n//         [51.53, -0.13]\r\n//       ],\r\n//       [\r\n//         [51.51, -0.05],\r\n//         [51.51, -0.07],\r\n//         [51.53, -0.07]\r\n//       ]\r\n//     ];\r\n\r\n//     const rectangle = [\r\n//       [51.49, -0.08],\r\n//       [51.5, -0.06]\r\n//     ];\r\n\r\n//     return (\r\n//       <div>\r\n//         <Map\r\n//           style={{ width: \"600px\", height: \"400px\" }}\r\n//           center={position}\r\n//           zoom={this.state.zoom}\r\n//         >\r\n//           <TileLayer\r\n//             attribution='&amp;copy <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\r\n//             url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\r\n//           />\r\n//           {/* <LayerGroup>\r\n//             <Circle center={center} fillColor=\"blue\" radius={200} />\r\n//             <Circle\r\n//               center={center}\r\n//               fillColor=\"red\"\r\n//               radius={100}\r\n//               stroke={false}\r\n//             />\r\n//             <LayerGroup>\r\n//               <Circle\r\n//                 center={[51.51, -0.08]}\r\n//                 color=\"green\"\r\n//                 fillColor=\"green\"\r\n//                 radius={100}\r\n//               />\r\n//             </LayerGroup>\r\n//           </LayerGroup> */}\r\n//           <Marker position={position}>\r\n//             <Popup>\r\n//               A pretty CSS3 popup. <br /> Easily customizable.\r\n//             </Popup>\r\n//           </Marker>\r\n//         </Map>\r\n//       </div>\r\n//     );\r\n//   }\r\n// }\r\n\r\nimport React, { Component } from \"react\";\r\nimport {\r\n  Circle,\r\n  CircleMarker,\r\n  Map,\r\n  Marker,\r\n  Polygon,\r\n  Popup,\r\n  Rectangle,\r\n  TileLayer,\r\n  Tooltip\r\n} from \"react-leaflet\";\r\n\r\nconst center = [51.505, -0.09];\r\n\r\nconst multiPolygon = [\r\n  [\r\n    [51.51, -0.12],\r\n    [51.51, -0.13],\r\n    [51.53, -0.13]\r\n  ],\r\n  [\r\n    [51.51, -0.05],\r\n    [51.51, -0.07],\r\n    [51.53, -0.07]\r\n  ]\r\n];\r\n\r\nconst rectangle = [\r\n  [51.49, -0.08],\r\n  [51.5, -0.06]\r\n];\r\n\r\nexport default class TooltipExample extends Component {\r\n  state = {\r\n    clicked: 0\r\n  };\r\n\r\n  onClickCircle = () => {\r\n    this.setState({ clicked: this.state.clicked + 1 });\r\n  };\r\n\r\n  render() {\r\n    const clickedText =\r\n      this.state.clicked === 0\r\n        ? \"Click this Circle to change the Tooltip text\"\r\n        : `Circle click: ${this.state.clicked}`;\r\n\r\n    return (\r\n      <Map\r\n        center={center}\r\n        zoom={13}\r\n        style={{ width: \"600px\", height: \"400px\" }}\r\n      >\r\n        <TileLayer\r\n          attribution='&amp;copy <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\r\n          url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\r\n        />\r\n        <Circle\r\n          center={center}\r\n          fillColor=\"blue\"\r\n          onClick={this.onClickCircle}\r\n          radius={200}\r\n        >\r\n          <Tooltip>{clickedText}</Tooltip>\r\n        </Circle>\r\n        <CircleMarker center={[51.51, -0.12]} color=\"red\" radius={20}>\r\n          <Tooltip>Tooltip for CircleMarker</Tooltip>\r\n        </CircleMarker>\r\n        <Marker position={[51.51, -0.09]}>\r\n          <Popup>Popup for Marker</Popup>\r\n          <Tooltip>Tooltip for Marker</Tooltip>\r\n        </Marker>\r\n        <Polygon color=\"purple\" positions={multiPolygon}>\r\n          <Tooltip sticky>sticky Tooltip for Polygon</Tooltip>\r\n        </Polygon>\r\n        <Rectangle bounds={rectangle} color=\"black\">\r\n          <Tooltip direction=\"bottom\" offset={[0, 20]} opacity={1} permanent>\r\n            permanent Tooltip for Rectangle\r\n          </Tooltip>\r\n        </Rectangle>\r\n      </Map>\r\n    );\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}