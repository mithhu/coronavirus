{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nvar _jsxFileName = \"G:\\\\corona\\\\components\\\\Map.js\";\nvar __jsx = React.createElement;\nimport React, { useState, useEffect } from \"react\";\nimport { Map, TileLayer, Marker, Popup } from \"react-leaflet\";\nimport { CircleMarker, Tooltip, Polygon, tooltip, Circle, L } from \"leaflet\";\n\nvar SimpleExample = function SimpleExample() {\n  var _useState = useState(51.505),\n      lat = _useState[0],\n      setLat = _useState[1];\n\n  var _useState2 = useState(-0.09),\n      lng = _useState2[0],\n      setLng = _useState2[1];\n\n  var _useState3 = useState(1.4),\n      zoom = _useState3[0],\n      setZoom = _useState3[1];\n\n  var position = [lat, lng];\n\n  var _useState4 = useState([]),\n      locations = _useState4[0],\n      setLocations = _useState4[1];\n\n  useEffect(function () {\n    function fetchData() {\n      var response;\n      return _regeneratorRuntime.async(function fetchData$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _regeneratorRuntime.awrap(fetch(\"https://covid19.mathdro.id/api/confirmed\").then(function (res) {\n                return res.json();\n              }));\n\n            case 2:\n              response = _context.sent;\n              setLocations(response);\n\n            case 4:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    }\n\n    fetchData();\n  }, []);\n  var myIcon = L.icon({\n    iconUrl: require(\"../css/red.png\"),\n    iconSize: [64, 64],\n    iconAnchor: [32, 64],\n    popupAnchor: null,\n    shadowUrl: null,\n    shadowSize: null,\n    shadowAnchor: null\n  });\n  return __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, __jsx(\"button\", {\n    onClick: function onClick() {\n      return console.log(locations);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }), __jsx(Map, {\n    style: {\n      width: \"700px\",\n      height: \"380px\"\n    },\n    center: position,\n    zoom: zoom,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, __jsx(TileLayer, {\n    attribution: \"&copy <a href=\\\"http://osm.org/copyright\\\">OpenStreetMap</a> contributors\",\n    url: \"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }), locations && locations.map(function (location) {\n    return __jsx(Marker, {\n      position: [location.lat, location[\"long\"]],\n      key: location.lat,\n      icon: myIcon,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    });\n  })));\n};\n\nexport default SimpleExample;","map":{"version":3,"sources":["G:/corona/components/Map.js"],"names":["React","useState","useEffect","Map","TileLayer","Marker","Popup","CircleMarker","Tooltip","Polygon","tooltip","Circle","L","SimpleExample","lat","setLat","lng","setLng","zoom","setZoom","position","locations","setLocations","fetchData","fetch","then","res","json","response","myIcon","icon","iconUrl","require","iconSize","iconAnchor","popupAnchor","shadowUrl","shadowSize","shadowAnchor","console","log","width","height","map","location"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,GAAT,EAAcC,SAAd,EAAyBC,MAAzB,EAAiCC,KAAjC,QAA8C,eAA9C;AACA,SAASC,YAAT,EAAuBC,OAAvB,EAAgCC,OAAhC,EAAyCC,OAAzC,EAAkDC,MAAlD,EAA0DC,CAA1D,QAAmE,SAAnE;;AAEA,IAAMC,aAAa,GAAG,SAAhBA,aAAgB,GAAM;AAAA,kBACJZ,QAAQ,CAAC,MAAD,CADJ;AAAA,MACnBa,GADmB;AAAA,MACdC,MADc;;AAAA,mBAEJd,QAAQ,CAAC,CAAC,IAAF,CAFJ;AAAA,MAEnBe,GAFmB;AAAA,MAEdC,MAFc;;AAAA,mBAGFhB,QAAQ,CAAC,GAAD,CAHN;AAAA,MAGnBiB,IAHmB;AAAA,MAGbC,OAHa;;AAI1B,MAAMC,QAAQ,GAAG,CAACN,GAAD,EAAME,GAAN,CAAjB;;AAJ0B,mBAKQf,QAAQ,CAAC,EAAD,CALhB;AAAA,MAKnBoB,SALmB;AAAA,MAKRC,YALQ;;AAO1BpB,EAAAA,SAAS,CAAC,YAAM;AACd,aAAeqB,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+CACyBC,KAAK,CAC1B,0CAD0B,CAAL,CAErBC,IAFqB,CAEhB,UAAAC,GAAG;AAAA,uBAAIA,GAAG,CAACC,IAAJ,EAAJ;AAAA,eAFa,CADzB;;AAAA;AACQC,cAAAA,QADR;AAIEN,cAAAA,YAAY,CAACM,QAAD,CAAZ;;AAJF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAMAL,IAAAA,SAAS;AACV,GARQ,EAQN,EARM,CAAT;AASA,MAAMM,MAAM,GAAGjB,CAAC,CAACkB,IAAF,CAAO;AACpBC,IAAAA,OAAO,EAAEC,OAAO,CAAC,gBAAD,CADI;AAEpBC,IAAAA,QAAQ,EAAE,CAAC,EAAD,EAAK,EAAL,CAFU;AAGpBC,IAAAA,UAAU,EAAE,CAAC,EAAD,EAAK,EAAL,CAHQ;AAIpBC,IAAAA,WAAW,EAAE,IAJO;AAKpBC,IAAAA,SAAS,EAAE,IALS;AAMpBC,IAAAA,UAAU,EAAE,IANQ;AAOpBC,IAAAA,YAAY,EAAE;AAPM,GAAP,CAAf;AASA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAQ,IAAA,OAAO,EAAE;AAAA,aAAMC,OAAO,CAACC,GAAR,CAAYnB,SAAZ,CAAN;AAAA,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE,MAAC,GAAD;AACE,IAAA,KAAK,EAAE;AAAEoB,MAAAA,KAAK,EAAE,OAAT;AAAkBC,MAAAA,MAAM,EAAE;AAA1B,KADT;AAEE,IAAA,MAAM,EAAEtB,QAFV;AAGE,IAAA,IAAI,EAAEF,IAHR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAKE,MAAC,SAAD;AACE,IAAA,WAAW,EAAC,2EADd;AAEE,IAAA,GAAG,EAAC,oDAFN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALF,EASGG,SAAS,IACRA,SAAS,CAACsB,GAAV,CAAc,UAAAC,QAAQ;AAAA,WACpB,MAAC,MAAD;AACE,MAAA,QAAQ,EAAE,CAACA,QAAQ,CAAC9B,GAAV,EAAe8B,QAAQ,QAAvB,CADZ;AAEE,MAAA,GAAG,EAAEA,QAAQ,CAAC9B,GAFhB;AAGE,MAAA,IAAI,EAAEe,MAHR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADoB;AAAA,GAAtB,CAVJ,CAFF,CADF;AAuBD,CAhDD;;AAkDA,eAAehB,aAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { Map, TileLayer, Marker, Popup } from \"react-leaflet\";\r\nimport { CircleMarker, Tooltip, Polygon, tooltip, Circle, L } from \"leaflet\";\r\n\r\nconst SimpleExample = () => {\r\n  const [lat, setLat] = useState(51.505);\r\n  const [lng, setLng] = useState(-0.09);\r\n  const [zoom, setZoom] = useState(1.4);\r\n  const position = [lat, lng];\r\n  const [locations, setLocations] = useState([]);\r\n\r\n  useEffect(() => {\r\n    async function fetchData() {\r\n      const response = await fetch(\r\n        \"https://covid19.mathdro.id/api/confirmed\"\r\n      ).then(res => res.json());\r\n      setLocations(response);\r\n    }\r\n    fetchData();\r\n  }, []);\r\n  const myIcon = L.icon({\r\n    iconUrl: require(\"../css/red.png\"),\r\n    iconSize: [64, 64],\r\n    iconAnchor: [32, 64],\r\n    popupAnchor: null,\r\n    shadowUrl: null,\r\n    shadowSize: null,\r\n    shadowAnchor: null\r\n  });\r\n  return (\r\n    <div>\r\n      <button onClick={() => console.log(locations)} />\r\n      <Map\r\n        style={{ width: \"700px\", height: \"380px\" }}\r\n        center={position}\r\n        zoom={zoom}\r\n      >\r\n        <TileLayer\r\n          attribution='&amp;copy <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\r\n          url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\r\n        />\r\n        {locations &&\r\n          locations.map(location => (\r\n            <Marker\r\n              position={[location.lat, location.long]}\r\n              key={location.lat}\r\n              icon={myIcon}\r\n            />\r\n          ))}\r\n      </Map>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SimpleExample;\r\n"]},"metadata":{},"sourceType":"module"}