{"ast":null,"code":"var _jsxFileName = \"G:\\\\corona\\\\components\\\\Map.js\";\nvar __jsx = React.createElement;\nimport React, { useState, useEffect } from \"react\";\nimport { Map, TileLayer, Marker, Popup } from \"react-leaflet\";\nimport { CircleMarker, Tooltip } from \"leaflet\";\n\nconst SimpleExample = () => {\n  const {\n    0: lat,\n    1: setLat\n  } = useState(51.505);\n  const {\n    0: lng,\n    1: setLng\n  } = useState(-0.09);\n  const {\n    0: zoom,\n    1: setZoom\n  } = useState(1.4);\n  const position = [lat, lng];\n  const {\n    0: locations,\n    1: setLocations\n  } = useState([]);\n  useEffect(() => {\n    async function fetchData() {\n      const response = await fetch(\"https://covid19.mathdro.id/api/confirmed\").then(res => res.json());\n      setLocations(response);\n    }\n\n    fetchData();\n  }, []);\n  return __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }, __jsx(\"button\", {\n    onClick: () => console.log(locations),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }), __jsx(Map, {\n    style: {\n      width: \"700px\",\n      height: \"380px\"\n    },\n    center: position,\n    zoom: zoom,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, __jsx(TileLayer, {\n    attribution: \"&copy <a href=\\\"http://osm.org/copyright\\\">OpenStreetMap</a> contributors\",\n    url: \"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }), __jsx(Marker, {\n    position: [51.51, -0.09],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, __jsx(Popup, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, \"Popup for Marker\"), __jsx(Tooltip, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, \"Tooltip for Marker\"))));\n};\n\nexport default SimpleExample;","map":{"version":3,"sources":["G:/corona/components/Map.js"],"names":["React","useState","useEffect","Map","TileLayer","Marker","Popup","CircleMarker","Tooltip","SimpleExample","lat","setLat","lng","setLng","zoom","setZoom","position","locations","setLocations","fetchData","response","fetch","then","res","json","console","log","width","height"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,GAAT,EAAcC,SAAd,EAAyBC,MAAzB,EAAiCC,KAAjC,QAA8C,eAA9C;AACA,SAASC,YAAT,EAAuBC,OAAvB,QAAsC,SAAtC;;AAEA,MAAMC,aAAa,GAAG,MAAM;AAC1B,QAAM;AAAA,OAACC,GAAD;AAAA,OAAMC;AAAN,MAAgBV,QAAQ,CAAC,MAAD,CAA9B;AACA,QAAM;AAAA,OAACW,GAAD;AAAA,OAAMC;AAAN,MAAgBZ,QAAQ,CAAC,CAAC,IAAF,CAA9B;AACA,QAAM;AAAA,OAACa,IAAD;AAAA,OAAOC;AAAP,MAAkBd,QAAQ,CAAC,GAAD,CAAhC;AACA,QAAMe,QAAQ,GAAG,CAACN,GAAD,EAAME,GAAN,CAAjB;AACA,QAAM;AAAA,OAACK,SAAD;AAAA,OAAYC;AAAZ,MAA4BjB,QAAQ,CAAC,EAAD,CAA1C;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACd,mBAAeiB,SAAf,GAA2B;AACzB,YAAMC,QAAQ,GAAG,MAAMC,KAAK,CAC1B,0CAD0B,CAAL,CAErBC,IAFqB,CAEhBC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EAFS,CAAvB;AAGAN,MAAAA,YAAY,CAACE,QAAD,CAAZ;AACD;;AACDD,IAAAA,SAAS;AACV,GARQ,EAQN,EARM,CAAT;AAUA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAQ,IAAA,OAAO,EAAE,MAAMM,OAAO,CAACC,GAAR,CAAYT,SAAZ,CAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE,MAAC,GAAD;AACE,IAAA,KAAK,EAAE;AAAEU,MAAAA,KAAK,EAAE,OAAT;AAAkBC,MAAAA,MAAM,EAAE;AAA1B,KADT;AAEE,IAAA,MAAM,EAAEZ,QAFV;AAGE,IAAA,IAAI,EAAEF,IAHR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAKE,MAAC,SAAD;AACE,IAAA,WAAW,EAAC,2EADd;AAEE,IAAA,GAAG,EAAC,oDAFN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALF,EAYE,MAAC,MAAD;AAAQ,IAAA,QAAQ,EAAE,CAAC,KAAD,EAAQ,CAAC,IAAT,CAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADF,EAEE,MAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAFF,CAZF,CAFF,CADF;AAmCD,CApDD;;AAsDA,eAAeL,aAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { Map, TileLayer, Marker, Popup } from \"react-leaflet\";\r\nimport { CircleMarker, Tooltip } from \"leaflet\";\r\n\r\nconst SimpleExample = () => {\r\n  const [lat, setLat] = useState(51.505);\r\n  const [lng, setLng] = useState(-0.09);\r\n  const [zoom, setZoom] = useState(1.4);\r\n  const position = [lat, lng];\r\n  const [locations, setLocations] = useState([]);\r\n\r\n  useEffect(() => {\r\n    async function fetchData() {\r\n      const response = await fetch(\r\n        \"https://covid19.mathdro.id/api/confirmed\"\r\n      ).then(res => res.json());\r\n      setLocations(response);\r\n    }\r\n    fetchData();\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <button onClick={() => console.log(locations)} />\r\n      <Map\r\n        style={{ width: \"700px\", height: \"380px\" }}\r\n        center={position}\r\n        zoom={zoom}\r\n      >\r\n        <TileLayer\r\n          attribution='&amp;copy <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\r\n          url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\r\n        />\r\n        {/* <CircleMarker center={[51.51, -0.12]} color=\"red\" radius={20}>\r\n          <Tooltip>Tooltip for CircleMarker</Tooltip>\r\n        </CircleMarker> */}\r\n        <Marker position={[51.51, -0.09]}>\r\n          <Popup>Popup for Marker</Popup>\r\n          <Tooltip>Tooltip for Marker</Tooltip>\r\n        </Marker>\r\n        {/* {locations &&\r\n          locations.map(location => (\r\n            <Marker\r\n              style={{ height: \"10px\", width: \"10px\" }}\r\n              position={[location.lat, location.long]}\r\n              key={location.lat}\r\n            />\r\n          ))} */}\r\n        {/* <Marker position={position}>\r\n          <Popup>\r\n            A pretty CSS3 popup. <br /> Easily customizable.\r\n          </Popup>\r\n        </Marker> */}\r\n      </Map>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SimpleExample;\r\n"]},"metadata":{},"sourceType":"module"}