{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nvar _jsxFileName = \"G:\\\\corona\\\\components\\\\Map.js\";\nvar __jsx = React.createElement;\nimport React, { useState, useEffect } from \"react\";\nimport { Map, TileLayer, Marker, Popup } from \"react-leaflet\";\nimport { CircleMarker, Tooltip, Polygon, tooltip } from \"leaflet\";\n\nvar SimpleExample = function SimpleExample() {\n  var _useState = useState(51.505),\n      lat = _useState[0],\n      setLat = _useState[1];\n\n  var _useState2 = useState(-0.09),\n      lng = _useState2[0],\n      setLng = _useState2[1];\n\n  var _useState3 = useState(1.4),\n      zoom = _useState3[0],\n      setZoom = _useState3[1];\n\n  var position = [lat, lng];\n\n  var _useState4 = useState([]),\n      locations = _useState4[0],\n      setLocations = _useState4[1];\n\n  var multiPolygon = [[[51.51, -0.12], [51.51, -0.13], [51.53, -0.13]], [[51.51, -0.05], [51.51, -0.07], [51.53, -0.07]]];\n  useEffect(function () {\n    function fetchData() {\n      var response;\n      return _regeneratorRuntime.async(function fetchData$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _regeneratorRuntime.awrap(fetch(\"https://covid19.mathdro.id/api/confirmed\").then(function (res) {\n                return res.json();\n              }));\n\n            case 2:\n              response = _context.sent;\n              setLocations(response);\n\n            case 4:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    }\n\n    fetchData();\n  }, []);\n  return __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, __jsx(\"button\", {\n    onClick: function onClick() {\n      return console.log(locations);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }), __jsx(Map, {\n    style: {\n      width: \"700px\",\n      height: \"380px\"\n    },\n    center: position,\n    zoom: zoom,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, __jsx(TileLayer, {\n    attribution: \"&copy <a href=\\\"http://osm.org/copyright\\\">OpenStreetMap</a> contributors\",\n    url: \"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }), locations && locations.map(function (location) {\n    return __jsx(Marker, {\n      position: [location.lat, location[\"long\"]],\n      key: location.lat,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    });\n  }), __jsx(Polygon, {\n    color: \"purple\",\n    positions: multiPolygon,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }, __jsx(Tooltip, {\n    sticky: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }, \"sticky Tooltip for Polygon\"))));\n};\n\nexport default SimpleExample;","map":{"version":3,"sources":["G:/corona/components/Map.js"],"names":["React","useState","useEffect","Map","TileLayer","Marker","Popup","CircleMarker","Tooltip","Polygon","tooltip","SimpleExample","lat","setLat","lng","setLng","zoom","setZoom","position","locations","setLocations","multiPolygon","fetchData","fetch","then","res","json","response","console","log","width","height","map","location"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { Map, TileLayer, Marker, Popup } from \"react-leaflet\";\r\nimport { CircleMarker, Tooltip, Polygon, tooltip } from \"leaflet\";\r\n\r\nconst SimpleExample = () => {\r\n  const [lat, setLat] = useState(51.505);\r\n  const [lng, setLng] = useState(-0.09);\r\n  const [zoom, setZoom] = useState(1.4);\r\n  const position = [lat, lng];\r\n  const [locations, setLocations] = useState([]);\r\n\r\n  const multiPolygon = [\r\n    [\r\n      [51.51, -0.12],\r\n      [51.51, -0.13],\r\n      [51.53, -0.13]\r\n    ],\r\n    [\r\n      [51.51, -0.05],\r\n      [51.51, -0.07],\r\n      [51.53, -0.07]\r\n    ]\r\n  ];\r\n\r\n  useEffect(() => {\r\n    async function fetchData() {\r\n      const response = await fetch(\r\n        \"https://covid19.mathdro.id/api/confirmed\"\r\n      ).then(res => res.json());\r\n      setLocations(response);\r\n    }\r\n    fetchData();\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <button onClick={() => console.log(locations)} />\r\n      <Map\r\n        style={{ width: \"700px\", height: \"380px\" }}\r\n        center={position}\r\n        zoom={zoom}\r\n      >\r\n        <TileLayer\r\n          attribution='&amp;copy <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\r\n          url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\r\n        />\r\n        {/* <CircleMarker center={[51.51, -0.12]} color=\"red\" radius={20}>\r\n          <Tooltip>Tooltip for CircleMarker</Tooltip>\r\n        </CircleMarker> */}\r\n        {/* <Marker position={[51.51, -0.09]}>\r\n          <Popup>Popup for Marker</Popup>\r\n          <Tooltip>Tooltip for Marker</Tooltip>\r\n        </Marker> */}\r\n        {locations &&\r\n          locations.map(location => (\r\n            <Marker\r\n              position={[location.lat, location.long]}\r\n              key={location.lat}\r\n            />\r\n          ))}\r\n        <Polygon color=\"purple\" positions={multiPolygon}>\r\n          <Tooltip sticky>sticky Tooltip for Polygon</Tooltip>\r\n        </Polygon>\r\n        {/* <Marker position={position}>\r\n          <Popup>\r\n            A pretty CSS3 popup. <br /> Easily customizable.\r\n          </Popup>\r\n        </Marker> */}\r\n      </Map>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SimpleExample;\r\n"]},"metadata":{},"sourceType":"module"}