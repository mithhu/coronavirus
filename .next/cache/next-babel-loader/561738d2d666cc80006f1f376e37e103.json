{"ast":null,"code":"var _jsxFileName = \"G:\\\\corona\\\\components\\\\EventsExample.js\";\nvar __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { createRef, Component } from \"react\";\nimport { Map, TileLayer, Marker, Popup } from \"react-leaflet\";\nexport default class EventsExample extends Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {\n      hasLocation: false,\n      latlng: {\n        lat: 51.505,\n        lng: -0.09\n      }\n    });\n\n    _defineProperty(this, \"mapRef\", createRef());\n\n    _defineProperty(this, \"handleClick\", () => {\n      const map = this.mapRef.current;\n\n      if (map != null) {\n        map.leafletElement.locate();\n      }\n    });\n\n    _defineProperty(this, \"handleLocationFound\", e => {\n      this.setState({\n        hasLocation: true,\n        latlng: e.latlng\n      });\n    });\n  }\n\n  render() {\n    const marker = this.state.hasLocation ? __jsx(Marker, {\n      position: this.state.latlng,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }, __jsx(Popup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }, \"You are here\")) : null;\n    return __jsx(Map, {\n      center: this.state.latlng,\n      length: 4,\n      onClick: this.handleClick,\n      onLocationfound: this.handleLocationFound,\n      ref: this.mapRef,\n      zoom: 13,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }, __jsx(TileLayer, {\n      attribution: \"&copy <a href=\\\"http://osm.org/copyright\\\">OpenStreetMap</a> contributors\",\n      url: \"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }), marker);\n  }\n\n}","map":{"version":3,"sources":["G:/corona/components/EventsExample.js"],"names":["React","createRef","Component","Map","TileLayer","Marker","Popup","EventsExample","hasLocation","latlng","lat","lng","map","mapRef","current","leafletElement","locate","e","setState","render","marker","state","handleClick","handleLocationFound"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,SAA3B,QAA4C,OAA5C;AACA,SAASC,GAAT,EAAcC,SAAd,EAAyBC,MAAzB,EAAiCC,KAAjC,QAA8C,eAA9C;AAEA,eAAe,MAAMC,aAAN,SAA4BL,SAA5B,CAAsC;AAAA;AAAA;;AAAA,mCAC3C;AACNM,MAAAA,WAAW,EAAE,KADP;AAENC,MAAAA,MAAM,EAAE;AACNC,QAAAA,GAAG,EAAE,MADC;AAENC,QAAAA,GAAG,EAAE,CAAC;AAFA;AAFF,KAD2C;;AAAA,oCAS1CV,SAAS,EATiC;;AAAA,yCAWrC,MAAM;AAClB,YAAMW,GAAG,GAAG,KAAKC,MAAL,CAAYC,OAAxB;;AACA,UAAIF,GAAG,IAAI,IAAX,EAAiB;AACfA,QAAAA,GAAG,CAACG,cAAJ,CAAmBC,MAAnB;AACD;AACF,KAhBkD;;AAAA,iDAkB7BC,CAAC,IAAI;AACzB,WAAKC,QAAL,CAAc;AACZV,QAAAA,WAAW,EAAE,IADD;AAEZC,QAAAA,MAAM,EAAEQ,CAAC,CAACR;AAFE,OAAd;AAID,KAvBkD;AAAA;;AAyBnDU,EAAAA,MAAM,GAAG;AACP,UAAMC,MAAM,GAAG,KAAKC,KAAL,CAAWb,WAAX,GACb,MAAC,MAAD;AAAQ,MAAA,QAAQ,EAAE,KAAKa,KAAL,CAAWZ,MAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADF,CADa,GAIX,IAJJ;AAMA,WACE,MAAC,GAAD;AACE,MAAA,MAAM,EAAE,KAAKY,KAAL,CAAWZ,MADrB;AAEE,MAAA,MAAM,EAAE,CAFV;AAGE,MAAA,OAAO,EAAE,KAAKa,WAHhB;AAIE,MAAA,eAAe,EAAE,KAAKC,mBAJxB;AAKE,MAAA,GAAG,EAAE,KAAKV,MALZ;AAME,MAAA,IAAI,EAAE,EANR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAQE,MAAC,SAAD;AACE,MAAA,WAAW,EAAC,2EADd;AAEE,MAAA,GAAG,EAAC,oDAFN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MARF,EAYGO,MAZH,CADF;AAgBD;;AAhDkD","sourcesContent":["import React, { createRef, Component } from \"react\";\r\nimport { Map, TileLayer, Marker, Popup } from \"react-leaflet\";\r\n\r\nexport default class EventsExample extends Component {\r\n  state = {\r\n    hasLocation: false,\r\n    latlng: {\r\n      lat: 51.505,\r\n      lng: -0.09\r\n    }\r\n  };\r\n\r\n  mapRef = createRef();\r\n\r\n  handleClick = () => {\r\n    const map = this.mapRef.current;\r\n    if (map != null) {\r\n      map.leafletElement.locate();\r\n    }\r\n  };\r\n\r\n  handleLocationFound = e => {\r\n    this.setState({\r\n      hasLocation: true,\r\n      latlng: e.latlng\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const marker = this.state.hasLocation ? (\r\n      <Marker position={this.state.latlng}>\r\n        <Popup>You are here</Popup>\r\n      </Marker>\r\n    ) : null;\r\n\r\n    return (\r\n      <Map\r\n        center={this.state.latlng}\r\n        length={4}\r\n        onClick={this.handleClick}\r\n        onLocationfound={this.handleLocationFound}\r\n        ref={this.mapRef}\r\n        zoom={13}\r\n      >\r\n        <TileLayer\r\n          attribution='&amp;copy <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\r\n          url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\r\n        />\r\n        {marker}\r\n      </Map>\r\n    );\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}