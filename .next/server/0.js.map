{"version":3,"file":"0.js","sources":["webpack:///./components/Map.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\n\r\nimport {\r\n  AreaChart,\r\n  XAxis,\r\n  YAxis,\r\n  CartesianGrid,\r\n  Tooltip,\r\n  Area\r\n} from \"recharts\";\r\n\r\nconst SimpleExample = () => {\r\n  const [dailyData, setDailyData] = useState([]);\r\n  const [totalData, setTotalData] = useState({});\r\n\r\n  useEffect(() => {\r\n    async function fetchData() {\r\n      const response = await fetch(\r\n        \"https://covid19.mathdro.id/api/daily\"\r\n      ).then(res => res.json());\r\n      setDailyData(response);\r\n    }\r\n    fetchData();\r\n    async function fetchInfo() {\r\n      const response = await fetch(\r\n        \"https://covid19.mathdro.id/api/\"\r\n      ).then(res => res.json());\r\n      setTotalData(response);\r\n      console.log(response);\r\n    }\r\n    fetchInfo();\r\n  }, []);\r\n\r\n  let newData = [];\r\n  const dataCollector = () => {\r\n    let count = 1;\r\n    for (let i = dailyData.length - 7; count < 8; i++, count++) {\r\n      newData.push(dailyData[i]);\r\n    }\r\n    console.log(newData);\r\n  };\r\n\r\n  dataCollector();\r\n  return (\r\n    <div>\r\n      <div>\r\n        <p>\r\n          Total Confirmed:{\" \"}\r\n          {totalData.confirmed ? totalData.confirmed.value : undefined}\r\n        </p>\r\n        <p>\r\n          Total Reovered:{\" \"}\r\n          {totalData.recovered ? totalData.recovered.value : undefined}\r\n        </p>\r\n        <p>\r\n          Total Detah: {totalData.deaths ? totalData.deaths.value : undefined}\r\n        </p>\r\n      </div>\r\n      <AreaChart\r\n        width={730}\r\n        height={300}\r\n        data={newData}\r\n        margin={{ top: 10, right: 30, left: 20, bottom: 0 }}\r\n      >\r\n        <defs>\r\n          <linearGradient id=\"colorUv\" x1=\"0\" y1=\"0\" x2=\"0\" y2=\"1\">\r\n            <stop offset=\"5%\" stopColor=\"#FF0000\" stopOpacity={1} />\r\n            <stop offset=\"95%\" stopColor=\"#FF0000\" stopOpacity={0.2} />\r\n          </linearGradient>\r\n          <linearGradient id=\"colorPv\" x1=\"0\" y1=\"0\" x2=\"0\" y2=\"1\">\r\n            <stop offset=\"5%\" stopColor=\"#0CE30C\" stopOpacity={1} />\r\n            <stop offset=\"95%\" stopColor=\"#0CE30C\" stopOpacity={0.2} />\r\n          </linearGradient>\r\n        </defs>\r\n        <XAxis dataKey=\"reportDateString\" />\r\n        <YAxis\r\n          label={{\r\n            value: \"Total no. of cases\",\r\n            angle: -90,\r\n            position: \"insideBottomLeft\"\r\n          }}\r\n        />\r\n        <CartesianGrid strokeDasharray=\"3 3\" />\r\n        <Tooltip />\r\n        <Area\r\n          type=\"monotone\"\r\n          dataKey=\"totalConfirmed\"\r\n          stroke=\"#8884d8\"\r\n          fillOpacity={1}\r\n          fill=\"url(#colorUv)\"\r\n        />\r\n        <Area\r\n          type=\"monotone\"\r\n          dataKey=\"totalRecovered\"\r\n          stroke=\"#82ca9d\"\r\n          fillOpacity={1}\r\n          fill=\"url(#colorPv)\"\r\n        />\r\n      </AreaChart>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SimpleExample;\r\n"],"mappings":";;;;;;;;;;;;;;;;;;AAAA;AAEA;AACA;AAQA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AAGA;AACA;AACA;AAAA;AACA;AAAA;AACA;AAGA;AACA;AACA;AACA;AAAA;AACA;AAEA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AAHA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AALA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;AACA;AACA;AACA;AACA;AALA;AAAA;AAAA;AAAA;AAAA;AAAA;AAUA;AACA;AACA;;;;A","sourceRoot":""}